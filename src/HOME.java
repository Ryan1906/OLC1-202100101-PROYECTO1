/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import analizador.lexico;
import analizador.sintaxis;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JTextArea;
import analizador.AFD;
import analizador.Evaluacion;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.List;
import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.stream.Collectors;
import java.util.stream.Stream;
import javax.swing.ImageIcon;


/**
 *
 * @author rjrsi
 */
public class HOME extends javax.swing.JFrame {
    private static String nombreArchivo = null;

    /**
     * Creates new form HOME
     */
    public HOME() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TXTAutomata = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TXTConsole = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel15 = new javax.swing.JPanel();
        JImagen = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ExREGAN USAC");

        jPanel1.setBackground(new java.awt.Color(17, 15, 72));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("MS Gothic", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ARCHIVO");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 10, 160, 40));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        TXTAutomata.setColumns(20);
        TXTAutomata.setRows(5);
        jScrollPane1.setViewportView(TXTAutomata);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 400, 240));

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 400, 240));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jButton3.setBackground(new java.awt.Color(93, 161, 252));
        jButton3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("ABRIR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(93, 161, 252));
        jButton4.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("GUARDAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(93, 161, 252));
        jButton6.setFont(new java.awt.Font("Century Gothic", 3, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("GUARDAR COMO");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 190, 140));

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 200, 150));

        TXTConsole.setColumns(20);
        TXTConsole.setRows(5);
        jScrollPane2.setViewportView(TXTConsole);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1001, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 449, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, 1450, -1));

        jPanel10.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 12)); // NOI18N
        jLabel2.setText("  CONSOLA");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 610, 80, 40));

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1450, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, 1450, 100));

        jPanel8.setBackground(new java.awt.Color(153, 153, 153));

        jButton1.setBackground(new java.awt.Color(15, 15, 87));
        jButton1.setFont(new java.awt.Font("Microsoft JhengHei Light", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("GENERAR AUTOMATA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(15, 15, 87));
        jButton2.setFont(new java.awt.Font("Microsoft JhengHei", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("ANALIZAR ENTRADA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, 340, 90));

        jComboBox1.setBackground(new java.awt.Color(79, 79, 79));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Árboles", "Siguientes", "Transiciones", "Autómatas", "AFND" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 30, 250, 30));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(JImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(JImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 110, 680, 420));

        jPanel16.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 690, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 410, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 90, 690, 410));

        jButton5.setFont(new java.awt.Font("Segoe UI Black", 3, 48)); // NOI18N
        jButton5.setText("<");
        jButton5.setAlignmentY(0.3F);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 550, 80, 60));

        jButton7.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jButton7.setText(">");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 550, 70, 60));

        jButton8.setText("MOSTRAR");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 20, 120, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1512, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    
    
    
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        


        
    if (jComboBox1.getSelectedItem().equals("Árboles")) {
            String Carpeta = "ARBOLES_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  nombresarchivos.length-1) {
            contadorimagenes=0;
            }else{
                contadorimagenes = contadorimagenes+1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);

            
            
        } else if (jComboBox1.getSelectedItem().equals("Autómatas")) {
            String Carpeta = "AFD_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  nombresarchivos.length-1) {
            contadorimagenes=0;
            }else{
                contadorimagenes = contadorimagenes+1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);

            
        } else if (jComboBox1.getSelectedItem().equals("Siguientes")) {
            String Carpeta = "SIGUIENTES_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  nombresarchivos.length-1) {
            contadorimagenes=0;
            }else{
                contadorimagenes = contadorimagenes+1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        }else if (jComboBox1.getSelectedItem().equals("Transiciones")) {
            String Carpeta = "TRANSICIONES_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  nombresarchivos.length-1) {
            contadorimagenes=0;
            }else{
                contadorimagenes = contadorimagenes+1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        }else if (jComboBox1.getSelectedItem().equals("AFND")) {
            String Carpeta = "AFND_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  nombresarchivos.length-1) {
            contadorimagenes=0;
            }else{
                contadorimagenes = contadorimagenes+1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        }
        
        
        
        
    }//GEN-LAST:event_jButton7ActionPerformed

    lexico scanner;
    sintaxis analizador;
    String[][] Errores;
    int contadorEr =0;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String entrada = TXTAutomata.getText();
         try {
            
            scanner = new lexico(new java.io.StringReader(entrada));
            analizador = new sintaxis(scanner);
            analizador.parse();
            
            System.out.println("Analisis finalizado");

            // generar reporte de errores lexicos
            if (scanner.erroresLexicos.isEmpty()) {
                System.out.println("No se encontraron errores lexicos");
            } else {
                scanner.erroresLexicos.forEach((error) -> {
                    System.out.println(error.getTipo() + "| " + error.getDescripcion() + "| " + error.getLinea() + "| " + error.getColumna());
                });
            }
            
            // generar reporte de errores sintacticos
            if (analizador.erroresSintacticos.isEmpty()) {
                System.out.println("No se encontraron errores sintacticos");
            } else {
                analizador.erroresSintacticos.forEach((error) -> {
                    System.out.println(error.getTipo() + "| " + error.getDescripcion() + "| " + error.getLinea() + "| " + error.getColumna());
                    String Indice = Integer.toString(contadorEr);
                    Errores[contadorEr][0] = Indice;
                    Errores[contadorEr][1] = error.getTipo();
                    Errores[contadorEr][2] = error.getDescripcion();
                    Errores[contadorEr][3] = error.getLinea();
                    Errores[contadorEr][4] = error.getColumna();
                    
                    
                });
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
         
         for (AFD afd : analizador.arboles) {
            
            try {
                afd.Ejecutar();
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            
                
            }
        String nombreArchivo = "ERRORES.html";
    File archivo = new File(nombreArchivo);
    try {
        PrintWriter writer = new PrintWriter(archivo);
        writer.println("<html>");
        writer.println("<head>");
        writer.println("<title> Tabla de Ejemplo </title>");
        writer.println("</head>");
        writer.println("<body>");
        writer.println("<h1> Mi tabla de ejemplo </h1>");
        writer.println("<table>");
        writer.println("<tr>");
        writer.println("<th> Columna 1 </th>");
        writer.println("<th> Columna 2 </th>");
        writer.println("<th> Columna 3 </th>");
        writer.println("<th> Columna 4 </th>");
        writer.println("<th> Columna 5 </th>");
        writer.println("</tr>");
        
        // Aquí agregamos 3 filas de ejemplo a la tabla
        for (int i = 1; i <= contadorEr; i++) {
            writer.println("<tr>");
            writer.println("<td>"+Errores[i][0]+"</td>");
            writer.println("<td>"+Errores[i][1]+"</td>");
            writer.println("<td>"+Errores[i][2]+"</td>");
            writer.println("<td>"+Errores[i][3]+"</td>");
            writer.println("<td>"+Errores[i][4]+"</td>");
            writer.println("</tr>");
        }
        
        writer.println("</table>");
        writer.println("</body>");
        writer.println("</html>");
        writer.close();
        System.out.println("El archivo se ha creado correctamente.");
    } catch (FileNotFoundException ex) {
        System.out.println("Error al crear el archivo: " + ex.getMessage());
    }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
  JFileChooser fileChooser = new JFileChooser();
    int seleccion = fileChooser.showOpenDialog(null);

    if (seleccion == JFileChooser.APPROVE_OPTION) {
        File archivoSeleccionado = fileChooser.getSelectedFile();
        String nombreArchivo = archivoSeleccionado.getAbsolutePath();

        try (FileReader reader = new FileReader(archivoSeleccionado)) {
            char[] buffer = new char[4096];
            int charsRead;
            StringBuilder sb = new StringBuilder();
            while ((charsRead = reader.read(buffer)) != -1) {
                sb.append(buffer, 0, charsRead);
            }
            String contenidoArchivo = sb.toString();
            TXTAutomata.append(contenidoArchivo);
        } catch (IOException e) {
            e.printStackTrace();
        }

        System.out.println("Archivo seleccionado: " + nombreArchivo);
    } else {
        System.out.println("No se ha seleccionado ningún archivo.");
    }
        
    }//GEN-LAST:event_jButton3ActionPerformed


    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    if (nombreArchivo == null) {
        guardarComo(TXTAutomata);
    } else {
        try (FileWriter archivo = new FileWriter(nombreArchivo)) {
            archivo.write(TXTAutomata.getText());
            System.out.println("Archivo guardado exitosamente.");
        } catch (IOException e) {
            System.out.println("Error al guardar el archivo.");
            e.printStackTrace();
        }
    }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
      

      JFileChooser fileChooser = new JFileChooser();
      int seleccion = fileChooser.showSaveDialog(null);

      if (seleccion == JFileChooser.APPROVE_OPTION) {
         String nombreArchivo = fileChooser.getSelectedFile().getAbsolutePath();

         try (FileWriter archivo = new FileWriter(nombreArchivo)) {
            archivo.write(TXTAutomata.getText());
            System.out.println("Archivo guardado exitosamente.");
         } catch (IOException e) {
            System.out.println("Error al guardar el archivo.");
            e.printStackTrace();
         }
      } else {
         System.out.println("No se ha seleccionado ningún archivo.");
      }
    }//GEN-LAST:event_jButton6ActionPerformed

    public static String eliminarBarraInversa(String cadena) {
    return cadena.replace("\\'", "'");
    }
    
    public void generador(String dir, String nombre, String texto) throws IOException {
        Path filePath = Paths.get(dir, nombre + ".json");
        File file = filePath.toFile();

        try (PrintWriter writer = new PrintWriter(file)) {
            writer.print(texto);
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
String salida="";
        String resultados = "[\n";
        int count = 0; // Contador de objetos JSON
        for (Evaluacion p : analizador.pruebas) {
            for (AFD afd : analizador.arboles) {
                if (afd.getNombre().equals(p.getAfd())) {
                    boolean res = afd.analisis(analizador.conjuntos, p.getCadena());
                    String cadenaSinBarra = eliminarBarraInversa(p.getCadena());
                    resultados += "{\n"
                            + "\"Valor\": "+cadenaSinBarra+",\n"
                            + "\"Expresion_regular\": \""+p.getAfd()+"\",\n"
                            + "\"Cadena Valida\": \""+res+"\"\n"
                            + "}";
                    // Verificar si es el último objeto JSON en la lista
                    if (++count < analizador.pruebas.size()) {
                        resultados += ","; // Agregar coma solo si no es el último
                    }
                    if(res){
                        salida += "La expresión: "+ p.getCadena()+" es válida con la expresión regular "+ p.getAfd()+"\n";
                    } else{
                        salida += "La expresión: "+ p.getCadena()+" no es válida con la expresión regular "+ p.getAfd()+"\n";
                    }
                    break;
                }
            }
        }
        resultados+="]\n"; // Agregar corchete de cierre
        
        TXTConsole.setText( salida+"Analisis de gramática finalizado");
        //TXTConsole.setText("");
   
        try {
            generador("src/SALIDAS_202100101/", "Reporte", resultados);
        } catch (IOException ex) {
            java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        
            






        
        
        
      
    }//GEN-LAST:event_jButton2ActionPerformed
 
    int contadorimagenes =0;
    
    
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
             if (jComboBox1.getSelectedItem().equals("Árboles")) {
            String Carpeta = "ARBOLES_202100101";
            String Archivo = "cadena.png";
    
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        } else if (jComboBox1.getSelectedItem().equals("Autómatas")) {
            String Carpeta = "AFD_202100101";
            String Archivo = "cadena.png";
    
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        } else if (jComboBox1.getSelectedItem().equals("Siguientes")) {
            String Carpeta = "SIGUIENTES_202100101";
            String Archivo = "cadena.png";
    
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        }else if (jComboBox1.getSelectedItem().equals("Transiciones")) {
            String Carpeta = "TRANSICIONES_202100101";
            String Archivo = "cadena.png";
    
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        }else if (jComboBox1.getSelectedItem().equals("AFND")) {
            String Carpeta = "AFND_202100101";
            String Archivo = "cadena.png";
    
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        }
        
        

    
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        
    if (jComboBox1.getSelectedItem().equals("Árboles")) {
            String Carpeta = "ARBOLES_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  1) {
            contadorimagenes=nombresarchivos.length-1;
            }else{
                contadorimagenes = contadorimagenes-1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);

            
            
        } else if (jComboBox1.getSelectedItem().equals("Autómatas")) {
            String Carpeta = "AFD_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  1) {
            contadorimagenes=nombresarchivos.length-1;
            }else{
                contadorimagenes = contadorimagenes-1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);

            
        } else if (jComboBox1.getSelectedItem().equals("Siguientes")) {
            String Carpeta = "SIGUIENTES_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  1) {
            contadorimagenes=nombresarchivos.length-1;
            }else{
                contadorimagenes = contadorimagenes-1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        }else if (jComboBox1.getSelectedItem().equals("Transiciones")) {
            String Carpeta = "TRANSICIONES_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  1) {
            contadorimagenes=nombresarchivos.length-1;
            }else{
                contadorimagenes = contadorimagenes-1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        }else if (jComboBox1.getSelectedItem().equals("AFND")) {
            String Carpeta = "AFND_202100101";
            URL urlCarpeta = getClass().getClassLoader().getResource(Carpeta);
            File archivo = new File(urlCarpeta.getPath());
            String[] nombresarchivos = archivo.list();
            
            
            System.out.println(nombresarchivos.length);
            System.out.println(contadorimagenes);
            
            
            String Archivo = nombresarchivos[contadorimagenes];
            System.out.println(nombresarchivos[contadorimagenes]);
            if (contadorimagenes ==  1) {
            contadorimagenes=nombresarchivos.length-1;
            }else{
                contadorimagenes = contadorimagenes+1;
            }
            ImageIcon imagen = new ImageIcon(getClass().getClassLoader().getResource(Carpeta + "/" + Archivo));
            // Escala la imagen para ajustarla al tamaño del JLabel
            imagen.setImage(imagen.getImage().getScaledInstance(JImagen.getWidth(), JImagen.getHeight(), Image.SCALE_SMOOTH));
            JImagen.setIcon(imagen);
            
        }
        
        
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    
public void guardarComo(JTextArea texto) {
    JFileChooser fileChooser = new JFileChooser();
    int seleccion = fileChooser.showSaveDialog(null);

    if (seleccion == JFileChooser.APPROVE_OPTION) {
        nombreArchivo = fileChooser.getSelectedFile().getAbsolutePath();

        try (FileWriter archivo = new FileWriter(nombreArchivo)) {
            archivo.write(texto.getText());
            System.out.println("Archivo guardado exitosamente.");
        } catch (IOException e) {
            System.out.println("Error al guardar el archivo.");
            e.printStackTrace();
        }
    } else {
        System.out.println("No se ha seleccionado ningún archivo.");
    }
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HOME().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JImagen;
    private javax.swing.JTextArea TXTAutomata;
    private javax.swing.JTextArea TXTConsole;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
